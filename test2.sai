




var x = 10


var y = 10 * x

var max = a => {
    b => {
        case {
            | a > b -> a
            | ?     -> b
        }
    }
}

var map = fun => {
    lst => {
        match lst {
            | [] -> []
            | (x:xs) -> ((fun x) : (map fun xs))
        }
    }
}

var main = sys => {
    let fun = y => {
        case {
            | y <= 1 -> 1
            | ?      -> fun (y - 1)
        }
    } in (writes (show (fun true)) stdout)
}

var writes = s => {
    f => {
        match s {
            | []     -> (true, f)
            | (c:cs) -> 
                let (succ, f') = write c f 
                in (case {
                    | succ == true -> (writes cs f')
                    | ?            -> (false, f') 
                })
        }
    }
}